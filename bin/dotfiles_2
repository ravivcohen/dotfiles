#!/bin/bash

export lib_file=$HOME/.dotfiles/libs/helper_functions.sh 

LOCAL=$(git rev-parse @)
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @ @{u})
if [ $LOCAL = $REMOTE ]; then
	echo "Up-to-date"
elif [ $LOCAL = $BASE ]; then
	echo "Need to pull"
elif [ $REMOTE = $BASE ]; then
	echo "Need to push"
else
	echo "Diverged"
fi

#All Helper functions can now be found inside libs/helper_functions.
. $lib_file

## Check if .dotfiles exist
if [[ ! -d ~/.dotfiles ]]; then
  new_dotfiles_install=1
  # ~/.dotfiles doesn't exist? Clone it!
  e_header "Downloading dotfiles"
  git clone --recursive git://github.com/ravivcohen/dotfiles.git ~/.dotfiles
  cd ~/.dotfiles
else
	# Update the Index
    git update-index -q --refresh
    git diff-index --quiet HEAD
    if [[ $? -eq 0 ]] && [[ -z "$(git ls-files --exclude-standard --others)" ]]; then
    	# Check if the dotfiles dir is out-of-date
    	echo clean
    	# Clean Repo. Lets check origin-master.
    	LOCAL=$(git rev-parse @)
		REMOTE=$(git rev-parse @{u})
		BASE=$(git merge-base @ @{u})
		if [ $LOCAL = $REMOTE ]; then
    		echo "Up-to-date"
		elif [ $LOCAL = $BASE ]; then
    		echo "Need to pull"
		elif [ $REMOTE = $BASE ]; then
    		echo "Need to push"
		else
    		echo "Diverged"
		fi

   	else
   		echo dirty
   fi
   #if [[ test -z "$u" ]]; then
  #	echo $u
  #fi
  # Make sure we have the latest files.
  # e_header "Updating dotfiles"
  # cd ~/.dotfiles
  # git pull
  # #Dont have any submodules installed for now
  #git submodule update --init --recursive --quiet
fi

#[[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]]